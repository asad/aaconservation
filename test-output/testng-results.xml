<testng-results>
  <reporter-output>
  </reporter-output>
  <suite name="AAConservation by packages" duration-ms="82048" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:23:22Z">
    <groups>
    </groups>
    <test name="compbio.conservation" duration-ms="82048" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:23:22Z">
      <class name="compbio.conservation.CorrelationTester">
        <test-method status="PASS" signature="gapColumnTester()" name="gapColumnTester" duration-ms="16" started-at="2010-12-21T12:23:07Z" finished-at="2010-12-21T12:23:07Z">
        </test-method>
        <test-method status="PASS" signature="gapColumnTesterIllegal()" name="gapColumnTesterIllegal" duration-ms="0" started-at="2010-12-21T12:23:07Z" finished-at="2010-12-21T12:23:07Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Input has badly aligned sequences with columns containing nothing but the gaps. Conservation methods cannot be calculated for such an alignment ! 
Gap characters are : [ , *, -, .]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Input has badly aligned sequences with columns containing nothing but the gaps. Conservation methods cannot be calculated for such an alignment ! 
Gap characters are : [ , *, -, .]
	at compbio.conservation.AminoAcidMatrix.gapOnlyColumnCheck(AminoAcidMatrix.java:355)
	at compbio.conservation.CorrelationTester.gapColumnTesterIllegal(CorrelationTester.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:640)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:627)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:799)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1103)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1098)
	at org.testng.TestRunner.privateRun(TestRunner.java:727)
	at org.testng.TestRunner.run(TestRunner.java:581)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:315)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:310)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:272)
	at org.testng.SuiteRunner.run(SuiteRunner.java:221)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:40)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:83)
	at org.testng.internal.thread.ThreadUtil$CountDownLatchedRunnable.run(ThreadUtil.java:151)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="gapColumnTesterIllegal3()" name="gapColumnTesterIllegal3" duration-ms="0" started-at="2010-12-21T12:23:07Z" finished-at="2010-12-21T12:23:07Z">
        </test-method>
        <test-method status="PASS" signature="gapColumnTesterIllegal2()" name="gapColumnTesterIllegal2" duration-ms="0" started-at="2010-12-21T12:23:07Z" finished-at="2010-12-21T12:23:07Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Input has badly aligned sequences with columns containing nothing but the gaps. Conservation methods cannot be calculated for such an alignment ! 
Gap characters are : [ ,  ,  , -]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Input has badly aligned sequences with columns containing nothing but the gaps. Conservation methods cannot be calculated for such an alignment ! 
Gap characters are : [ ,  ,  , -]
	at compbio.conservation.AminoAcidMatrix.gapOnlyColumnCheck(AminoAcidMatrix.java:355)
	at compbio.conservation.CorrelationTester.gapColumnTesterIllegal2(CorrelationTester.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:640)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:627)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:799)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1103)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1098)
	at org.testng.TestRunner.privateRun(TestRunner.java:727)
	at org.testng.TestRunner.run(TestRunner.java:581)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:315)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:310)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:272)
	at org.testng.SuiteRunner.run(SuiteRunner.java:221)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:40)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:83)
	at org.testng.internal.thread.ThreadUtil$CountDownLatchedRunnable.run(ThreadUtil.java:151)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
      </class>
      <class name="compbio.conservation.AccessoryTester">
        <test-method status="PASS" signature="inversedNormalizationTester()" name="inversedNormalizationTester" duration-ms="31" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="normalizationTester()" name="normalizationTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
      </class>
      <class name="compbio.conservation.SlowMethodTester">
        <test-method status="PASS" signature="reproduceIssue1()" name="reproduceIssue1" duration-ms="4937" started-at="2010-12-21T12:23:07Z" finished-at="2010-12-21T12:23:12Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Input has badly aligned sequences with columns containing nothing but the gaps. Conservation methods cannot be calculated for such an alignment ! 
Gap characters are : [ , *, -, ., X]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Input has badly aligned sequences with columns containing nothing but the gaps. Conservation methods cannot be calculated for such an alignment ! 
Gap characters are : [ , *, -, ., X]
	at compbio.conservation.AminoAcidMatrix.gapOnlyColumnCheck(AminoAcidMatrix.java:355)
	at compbio.conservation.AminoAcidMatrix.gapOnlyColumnsCheck(AminoAcidMatrix.java:326)
	at compbio.conservation.AminoAcidMatrix.<init>(AminoAcidMatrix.java:320)
	at compbio.conservation.SlowMethodTester.reproduceIssue1(SlowMethodTester.java:171)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:640)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:627)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:799)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1103)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1098)
	at org.testng.TestRunner.privateRun(TestRunner.java:727)
	at org.testng.TestRunner.run(TestRunner.java:581)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:315)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:310)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:272)
	at org.testng.SuiteRunner.run(SuiteRunner.java:221)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:40)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:83)
	at org.testng.internal.thread.ThreadUtil$CountDownLatchedRunnable.run(ThreadUtil.java:151)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="init()" name="init" is-config="true" duration-ms="0" started-at="2010-12-21T12:23:07Z" finished-at="2010-12-21T12:23:07Z">
        </test-method>
        <test-method status="PASS" signature="reproduceIssue4()" name="reproduceIssue4" duration-ms="4907" started-at="2010-12-21T12:23:12Z" finished-at="2010-12-21T12:23:17Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Input has badly aligned sequences with columns containing nothing but the gaps. Conservation methods cannot be calculated for such an alignment ! 
Gap characters are : [ , *, -, ., X]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Input has badly aligned sequences with columns containing nothing but the gaps. Conservation methods cannot be calculated for such an alignment ! 
Gap characters are : [ , *, -, ., X]
	at compbio.conservation.AminoAcidMatrix.gapOnlyColumnCheck(AminoAcidMatrix.java:355)
	at compbio.conservation.AminoAcidMatrix.gapOnlyColumnsCheck(AminoAcidMatrix.java:326)
	at compbio.conservation.AminoAcidMatrix.<init>(AminoAcidMatrix.java:320)
	at compbio.conservation.SlowMethodTester.reproduceIssue4(SlowMethodTester.java:206)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:640)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:627)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:799)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1103)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1098)
	at org.testng.TestRunner.privateRun(TestRunner.java:727)
	at org.testng.TestRunner.run(TestRunner.java:581)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:315)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:310)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:272)
	at org.testng.SuiteRunner.run(SuiteRunner.java:221)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:40)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:83)
	at org.testng.internal.thread.ThreadUtil$CountDownLatchedRunnable.run(ThreadUtil.java:151)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testAPIgetConservation()" name="testAPIgetConservation" duration-ms="47" started-at="2010-12-21T12:23:17Z" finished-at="2010-12-21T12:23:17Z">
        </test-method>
        <test-method status="PASS" signature="testSadler()" name="testSadler" duration-ms="1093" started-at="2010-12-21T12:23:17Z" finished-at="2010-12-21T12:23:18Z">
        </test-method>
        <test-method status="PASS" signature="testSadler()" name="testSadler" duration-ms="1094" started-at="2010-12-21T12:23:18Z" finished-at="2010-12-21T12:23:19Z">
        </test-method>
        <test-method status="PASS" signature="testSadler()" name="testSadler" duration-ms="1093" started-at="2010-12-21T12:23:19Z" finished-at="2010-12-21T12:23:20Z">
        </test-method>
        <test-method status="PASS" signature="testSadler()" name="testSadler" duration-ms="1078" started-at="2010-12-21T12:23:20Z" finished-at="2010-12-21T12:23:21Z">
        </test-method>
        <test-method status="PASS" signature="testSadler()" name="testSadler" duration-ms="1078" started-at="2010-12-21T12:23:21Z" finished-at="2010-12-21T12:23:22Z">
        </test-method>
      </class>
      <class name="compbio.conservation.ConservationScore2Tester">
        <test-method status="PASS" signature="armonTester()" name="armonTester" duration-ms="15" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="init()" name="init" is-config="true" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="gersteinTester()" name="gersteinTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="joresTester()" name="joresTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="landgrafTester()" name="landgrafTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="karlinTester()" name="karlinTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="kabatTester()" name="kabatTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="mirnyTester()" name="mirnyTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="notLancetTester()" name="notLancetTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="schneiderTester()" name="schneiderTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="thompsonTester()" name="thompsonTester" duration-ms="15" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="tester()" name="tester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="smallestTaylosetGapsTester()" name="smallestTaylosetGapsTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="sanderTester()" name="sanderTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="shenkinTester()" name="shenkinTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="smallestTaylorSetNoGapsTester()" name="smallestTaylorSetNoGapsTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="zvelibilTester()" name="zvelibilTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="williamsonTester()" name="williamsonTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="valdarTester()" name="valdarTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="totalAcidsWillSetsTester()" name="totalAcidsWillSetsTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
      </class>
      <class name="compbio.conservation.ConservationTester">
        <test-method status="PASS" signature="init()" name="init" is-config="true" duration-ms="44751" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:45Z">
        </test-method>
        <test-method status="PASS" signature="testCustomSMERFS()" name="testCustomSMERFS" duration-ms="3172" started-at="2010-12-21T12:22:45Z" finished-at="2010-12-21T12:22:48Z">
        </test-method>
        <test-method status="PASS" signature="testLoadClustalAl()" name="testLoadClustalAl" duration-ms="8297" started-at="2010-12-21T12:22:48Z" finished-at="2010-12-21T12:22:57Z">
        </test-method>
        <test-method status="PASS" signature="testMethods()" name="testMethods" duration-ms="7984" started-at="2010-12-21T12:22:57Z" finished-at="2010-12-21T12:23:04Z">
        </test-method>
        <test-method status="PASS" signature="testSingleMethods()" name="testSingleMethods" duration-ms="2250" started-at="2010-12-21T12:23:05Z" finished-at="2010-12-21T12:23:07Z">
        </test-method>
      </class>
      <class name="compbio.conservation.ColumnScoresTester">
        <test-method status="PASS" signature="KabatTester()" name="KabatTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="TaylorTester()" name="TaylorTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="WilliamsonTester()" name="WilliamsonTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="joresScoreTester()" name="joresScoreTester" duration-ms="15" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="armonScoreTester()" name="armonScoreTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="lancetScoreTester()" name="lancetScoreTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="karlinScoreTester()" name="karlinScoreTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="landgarfScoreTester()" name="landgarfScoreTester" duration-ms="16" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="mirnyTester()" name="mirnyTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="sanderScoreTester()" name="sanderScoreTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="valdarScoreTester()" name="valdarScoreTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="schneiderTester()" name="schneiderTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
        <test-method status="PASS" signature="thompsonScoreTester()" name="thompsonScoreTester" duration-ms="0" started-at="2010-12-21T12:22:00Z" finished-at="2010-12-21T12:22:00Z">
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
